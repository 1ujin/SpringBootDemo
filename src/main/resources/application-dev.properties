# https://blog.csdn.net/lovelichao12/article/details/80267337
# \u5F00\u53D1\u73AF\u5883\u4E13\u7528\u914D\u7F6E
com.didispace.blog.name=\u563B\u563B
spring.application.name=SpringBootDemo
#spring.freemarker.prefer-file-system-access=false
# \u670D\u52A1\u7AEF\u53E3
server.port=8080
# \u542F\u7528 HTTPS
server.ssl.enabled=false
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=123456
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=tomcat
# Eureka Server
#eureka.instance.hostname=localhost
#eureka.instance.prefer-ip-address=true
eureka.client.registerWithEureka=false
eureka.client.fetchRegistry=false
#eureka.client.service-url.defaultZone=http://localhost:8080
#eureka.client.server.waitTimeInMsWhenSyncEmpty=0
# Zuul Proxy: "http://localhost:${server.port}/api/demo/**" -> "http://localhost:8080/**"
zuul.routes.products.path=/api/demo/**
zuul.routes.products.url=http://localhost:8080/
#spring.profiles=slaveA
#spring.application.name=SpringBootDemo
#server.port=8761
#eureka.client.service-url.defaultZone=http://slave2:8762/eureka/
#
#spring.profiles=slaveB
#spring.application.name=SpringBootDemo
#server.port=8762
#eureka.client.service-url.defaultZone=http://slave1:8761/eureka/
# \u4E91\u7AEF\u670D\u52A1\u5668
spring.cloud.config.server.git.uri=https://github.com/1ujin/SpringBootDemo
# Actuator
#management.server.port=8090
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/manage
# \u914D\u7F6E Admin Server \u7684\u5730\u5740
#spring.boot.admin.client.url=http://localhost:8080
management.metrics.web.server.request.autotime.enabled=false
spring.zipkin.baseUrl=http://localhost:${server.port}
# Flyway \u5728\u5DF2\u6709\u6570\u636E\u5E93\u4E2D\u5EFA\u7ACB\u8868\u9700\u8981\u5220\u9664 flyway_history_schema \u4E2D\u7684\u8BB0\u5F55\u5E76\u518D\u6B21\u8FD0\u884C
# https://www.cnblogs.com/harrychinese/p/springboot_flyway.html
# https://pkaq.org/2018/09/11/flyway/
# https://www.cnblogs.com/cord/p/10293813.html/
# https://www.cnblogs.com/relucent/p/6616880.html/
# \u5B9E\u73B0 Flyway \u65F6 datasource \u4E0D\u9700\u8981 serverTimeZone \u548C\u6570\u636E\u5E93\u540D, \u4F46\u662F\u5B9E\u73B0 Batch Processing \u65F6\u9700\u8981serverTimeZone\u548C\u6570\u636E\u5E93\u540D\uFF0CMyBatis \u9700\u8981\u6570\u636E\u5E93\u540D
#spring.datasource.url=jdbc:mysql://localhost:3306/test?useSSL=false&serverTimezone=GMT%2B8&characterEncoding=utf8
#spring.datasource.url=jdbc:mysql://localhost:3306/spring_test?serverTimezone=UTC%2B8
#spring.datasource.url=jdbc:oracle:thin:@localhost:1521/pdborcl.microdone.cn
# \u5B9E\u73B0 Flyway \u65F6 datasource \u4E0D\u9700\u8981 username \u548C password, \u4F46\u662F\u5B9E\u73B0 Batch Processing \u65F6\u9700\u8981 username \u548C password
spring.datasource.username=scott
spring.datasource.password=tiger
# \u7B2C\u4E00\u6B21\u8FD0\u884C batch \u65F6\u5148\u7528 schema-all.sql \u751F\u6210\u6240\u9700\u8868\uFF0C\u7B2C\u4E8C\u6B21\u8FD0\u884C\u65F6\u518D\u6CE8\u91CA\u6389 schema-all.sql \u5E76\u5229\u7528 initialize-schema \u751F\u6210 batch_* \u8868
# \u8868\u793A\u8BA9 spring batch \u5728\u6570\u636E\u5E93\u91CC\u9762\u521B\u5EFA\u9ED8\u8BA4\u7684\u6570\u636E\u8868
spring.batch.initialize-schema=always
# \u521D\u59CB\u5316 SQL \u8BED\u53E5\u7684\u8DEF\u5F84\uFF0C\u4E0D\u8BBE\u7F6E\u65F6\uFF0C\u9ED8\u8BA4\u8DEF\u5F84\u4E0D\u5728 classpath \u4E0B
spring.batch.schema=classpath:/schema-all.sql
# \u914D\u7F6E\u7528\u4E8E\u542F\u52A8\u65F6\u662F\u5426\u521B\u5EFA JobLauncherCommandLineRunner
spring.batch.job.enabled=false
spring.flyway.url=jdbc:mysql://localhost:3306?serverTimezone=GMT%2B8
# \u542F\u7528 flyway
spring.flyway.enabled=false
# flyway \u7684 clean \u547D\u4EE4\u4F1A\u5220\u9664\u6307\u5B9A schema \u4E0B\u7684\u6240\u6709 table\uFF0C\u5F00\u542F\u7981\u7528 clean
spring.flyway.cleanDisabled=true
# \u8BBE\u5B9A SQL \u811A\u672C\u7684\u76EE\u5F55\uFF0C\u591A\u4E2A\u8DEF\u5F84\u4F7F\u7528\u9017\u53F7\u5206\u9694
spring.flyway.locations=classpath:/db
# \u5EFA\u7ACB\u65B0\u8868\u6240\u5728\u6570\u636E\u5E93\uFF0Cflyway \u7BA1\u7406\u7684 schema \u5217\u8868
spring.flyway.schemas=flyway_test
# \u5F00\u542F\u540E flyway \u5C06\u5728\u9700\u8981 baseline \u7684\u65F6\u5019\uFF0C\u81EA\u52A8\u6267\u884C\u4E00\u6B21 baseline
spring.flyway.baselineOnMigrate=true
spring.flyway.user=root
spring.flyway.password=123456

# \u662F\u5426\u5728\u542F\u52A8\u65F6\u521D\u59CB\u5316 schema
spring.jpa.generate-ddl=true
# \u662F\u5426\u5F00\u542F sql \u7684 log
spring.jpa.show-sql=true
# \u6307\u5B9A\u521D\u59CB\u5316 DDL \u811A\u672C
spring.datasource.schema=classpath:/schema.sql
# \u6307\u5B9A\u521D\u59CB\u5316 DML \u811A\u672C
spring.datasource.data=classpath:/data.sql
logging.level.org.hibernate=info
spring.h2.console.settings.web-allow-others=true
spring.h2.console.path=/h2
spring.h2.console.enabled=true

app.topic.name=HelloKafka
spring.kafka.bootstrap-servers=localhost:9092

# \u8BBE\u7F6E\u5BF9\u5E94\u7528\u6237\u540D\u548C\u5BC6\u7801\uFF0C\u9632\u6B62\u5BC6\u7801\u81EA\u52A8\u751F\u6210\uFF0C\u8C03\u7528 WebSecurityConfig \u7684\u7236\u7C7B WebSecurityConfigurerAdapter \u7684\u65B9\u6CD5\u65F6\u4F1A\u8986\u76D6 WebSecurityConfig \u4E2D\u7684\u914D\u7F6E
spring.security.user.name=admin
spring.security.user.password=123456
spring.security.user.roles=user

# \u5F00\u542F\u5EF6\u8FDF\u52A0\u8F7D\u529F\u80FD
mybatis.configuration.lazy-loading-enabled=true
# \u5F00\u542F\u6309\u9700\u52A0\u8F7D\u529F\u80FD\uFF08\u4E0D\u79EF\u6781\u52A0\u8F7D\uFF09
mybatis.configuration.aggressive-lazy-loading=false
# Mybatis \u6620\u5C04\u5173\u7CFB\u914D\u7F6E\uFF0C\u7701\u7565\u5305\u540D\u524D\u7F00\uFF0C\u4F5C\u7528\u7C7B\u4F3C\u4E8E mybatis-config.xml \u4E2D\u7684 typeAliases
mybatis.type-aliases-package=com.pojo
# classpath\uFF1A\u53EA\u4F1A\u5230\u4F60\u7684class\u8DEF\u5F84\u4E2D\u67E5\u627E\u627E\u6587\u4EF6
# classpath*\uFF1A\u4E0D\u4EC5\u5305\u542Bclass\u8DEF\u5F84\uFF0C\u8FD8\u5305\u62ECjar\u6587\u4EF6\u4E2D\uFF08class\u8DEF\u5F84\uFF09\u8FDB\u884C\u67E5\u627E
# https://www.cnblogs.com/fnlingnzb-learner/p/10524120.html
mybatis.mapper-locations=classpath:mapper/*.xml
# \u5173\u95ED\u4E00\u7EA7\u7F13\u5B58
#mybatis.configuration.local-cache-scope=statement
# \u5F00\u542F\u4E8C\u7EA7\u7F13\u5B58\uFF08\u9ED8\u8BA4\u662F\u5F00\u542F\u7684\uFF09
#mybatis.configuration.cache-enabled=true

# Redis \u9664\u4E86timeout\u90FD\u662F\u9ED8\u8BA4\u7684
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.timeout=1000
spring.redis.database=0
spring.redis.jedis.pool.max-active=8
spring.redis.jedis.pool.max-idle=8
spring.redis.jedis.pool.max-wait=-1
spring.redis.jedis.pool.min-idle=0
# \u81EA\u5B9A\u4E49Mybatis\u5C5E\u6027\uFF1A\u4E00\u4E2A\u8868\u540D
mybatis.configuration.variables.table.user=userinfo
#mybatis.config-location=classpath:mybatis-config.xml

# RabbitMQ
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
